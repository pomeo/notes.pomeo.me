<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://notes.sovechkin.com/</id>
  <title>notes.sovechkin.com</title>
  <updated>2014-04-27T00:36:17Z</updated>
  <link rel="alternate" href="http://notes.sovechkin.com/"/>
  <link rel="self" href="http://notes.sovechkin.com/atom.xml"/>
  <author>
    <name>Sergey Ovechkin</name>
    <uri>http://sovechkin.com</uri>
  </author>
  <entry>
    <id>tag:notes.sovechkin.com,2014-04-27:/express_nodejs_capistrano_supervisord.html</id>
    <title type="html">express(node.js) + capistrano + supervisord</title>
    <published>2014-04-27T00:36:17Z</published>
    <updated>2014-04-27T12:49:30Z</updated>
    <link rel="alternate" href="http://notes.sovechkin.com/express_nodejs_capistrano_supervisord.html"/>
    <content type="html">&lt;pre&gt;&lt;code&gt;$ sudo apt-get install supervisor git-core curl build-essential libssl-dev pkg-config libexpat1-dev libicu-dev
$ sudo apt-get install libcairo2-dev libjpeg8-dev libgif-dev libpango1.0-dev g++ # not needed
$ curl https://raw.githubusercontent.com/creationix/nvm/v0.x.x/install.sh | sh
$ source ~/.nvm/nvm.sh
$ nvm install 0.x
$ nvm alias default 0.x
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;open&lt;/p&gt;
&lt;pre&gt;&lt;code class="bash"&gt;/etc/init.d/supervisor
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;find PATH and add &lt;em&gt;/home/ubuntu/.nvm/v0.x.x/bin&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="bash"&gt;PATH=/home/ubuntu/.nvm/v0.x.x/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;/etc/sudoers&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="bash"&gt;ubuntu ALL=(ALL) PASSWD: ALL
ubuntu ALL=NOPASSWD: /usr/bin/supervisorctl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;gem specific_install -l https://github.com/pomeo/capistrano-offroad&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;./config/deploy.rb&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="bash"&gt;#========================
#CONFIG
#========================
set :application, "site"
#========================
#CONFIG
#========================
require           "capistrano-offroad"
offroad_modules   "defaults", "supervisord"
set :repository,  "git@github.com:user/#{application}.git"
set :supervisord_start_group, "name"
set :supervisord_stop_group, "name"
#========================
#ROLES
#========================
set  :gateway,    "#{application}"  # main server
role :app,        "ubuntu@10.3.x.x" # lxc container
 
after "deploy:create_symlink", "deploy:npm_install", "deploy:restart"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;/etc/supervisor/conf.d/site.conf&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="bash"&gt;[program:site]
command=node app.js
directory=/home/ubuntu/www/current/
user=nobody
autostart=true
autorestart=true
startretries=3
stdout_logfile=/home/ubuntu/www/logs/server.log
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=10
stderr_logfile=/home/ubuntu/www/logs/error.log
stderr_logfile_maxbytes=1MB
stderr_logfile_backups=10
stopsignal=TERM
environment=NODE_ENV='production'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;thatâ€™s all&lt;/p&gt;
&lt;pre&gt;&lt;code class="bash"&gt;$ sudo service supervisor stop/start # not restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;cap deploy:status&lt;/em&gt;&lt;/strong&gt; - show supervisor processes&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;cap deploy:restart&lt;/em&gt;&lt;/strong&gt; - restart all node.js&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:notes.sovechkin.com,2013-06-06:/reboot_server_on_out-of-memory_condition.html</id>
    <title type="html">reboot server on out-of-memory condition</title>
    <published>2013-06-06T07:01:42Z</published>
    <updated>2013-06-06T07:05:18Z</updated>
    <link rel="alternate" href="http://notes.sovechkin.com/reboot_server_on_out-of-memory_condition.html"/>
    <content type="html">&lt;p&gt;&lt;strong&gt;&lt;em&gt;/etc/sysctl.conf&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="bash"&gt;vm.panic_on_oom=1
kernel.panic=10
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The vm.panic_on_oom=1 line enables panic on OOM, the kernel.panic=10 line tells the kernel to reboot ten seconds after panicking.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:notes.sovechkin.com,2013-06-06:/iptables.html</id>
    <title type="html">iptables</title>
    <published>2013-06-06T06:07:34Z</published>
    <updated>2013-06-06T06:50:12Z</updated>
    <link rel="alternate" href="http://notes.sovechkin.com/iptables.html"/>
    <content type="html">&lt;pre&gt;&lt;code class="bash"&gt;netstat -anp | grep LISTEN&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;sudo nano /etc/iptables.firewall.rules&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="bash"&gt;*filter

# MongoDB
-A INPUT -m state --state NEW -p tcp --destination-port 27017 -s x.x.x.x -j ACCEPT
-A OUTPUT -d x.x.x.x -p tcp --source-port 27017 -m state --state ESTABLISHED -j ACCEPT
-A INPUT -m state --state NEW -p tcp --destination-port 28017 -s x.x.x.x -j ACCEPT
-A OUTPUT -d x.x.x.x -p tcp --source-port 28017 -m state --state ESTABLISHED -j ACCEPT

# Redis
-A INPUT -m state --state NEW -p tcp --destination-port 6379 -s x.x.x.x -j ACCEPT
-A OUTPUT -d x.x.x.x -p tcp --source-port 6379 -m state --state ESTABLISHED -j ACCEPT

# RabbitMQ
-A INPUT -m state --state NEW -p tcp --destination-port 5672 -s x.x.x.x -j ACCEPT
-A OUTPUT -d x.x.x.x -p tcp --source-port 5672 -m state --state ESTABLISHED -j ACCEPT
-A INPUT -m state --state NEW -p tcp --destination-port 5673 -s x.x.x.x -j ACCEPT
-A OUTPUT -d x.x.x.x -p tcp --source-port 5673 -m state --state ESTABLISHED -j ACCEPT
-A INPUT -m state --state NEW -p tcp --destination-port 15672 -s x.x.x.x -j ACCEPT
-A OUTPUT -d x.x.x.x -p tcp --source-port 15672 -m state --state ESTABLISHED -j ACCEPT

# MariaDB
-A INPUT -m state --state NEW -p tcp --destination-port 3306 -s x.x.x.x -j ACCEPT
-A OUTPUT -d x.x.x.x -p tcp --source-port 3306 -m state --state ESTABLISHED -j ACCEPT

#  Allow all loopback (lo0) traffic and drop all traffic to 127/8 that doesn't use lo0
-A INPUT -i lo -j ACCEPT
-A INPUT ! -i lo -d 127.0.0.0/8 -j REJECT

#  Accept all established inbound connections
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

#  Allow all outbound traffic - you can modify this to only allow certain traffic
-A OUTPUT -j ACCEPT

#  Allow HTTP and HTTPS connections from anywhere (the normal ports for websites and SSL).
-A INPUT -p tcp --dport 80 -j ACCEPT
-A INPUT -p tcp --dport 443 -j ACCEPT

#  Allow ports for testing
-A INPUT -p tcp --dport 8080:8090 -j ACCEPT

#  Allow ports for MOSH (mobile shell)
-A INPUT -p udp --dport 60000:61000 -j ACCEPT

#  Allow SSH connections
-A INPUT -p tcp -m state --state NEW --dport 2222 -j ACCEPT

#  Allow ping
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT

#  Log iptables denied calls
-A INPUT -m limit --limit 5/min -j LOG --log-prefix "iptables denied: " --log-level 7

#  Reject all other inbound - default deny unless explicitly allowed policy
-A INPUT -j REJECT
-A FORWARD -j REJECT

COMMIT&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;sudo iptables-restore &amp;lt; /etc/iptables.firewall.rules&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;sudo nano /etc/network/if-pre-up.d/firewall&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="bash"&gt;#!/bin/sh
/sbin/iptables-restore &amp;lt; /etc/iptables.firewall.rules&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;sudo chmod +x /etc/network/if-pre-up.d/firewall&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:notes.sovechkin.com,2012-06-23:/nanoc_github_pages.html</id>
    <title type="html">deploy nanoc on github pages</title>
    <published>2012-06-23T12:13:17Z</published>
    <updated>2012-07-29T08:28:16Z</updated>
    <link rel="alternate" href="http://notes.sovechkin.com/nanoc_github_pages.html"/>
    <content type="html">&lt;p&gt;nanoc workspace:&lt;/p&gt;
&lt;pre&gt;&lt;code class="bash"&gt;root [ -&amp;gt; "master" ]
  |- content (nanoc templates)
  |- layouts (nanoc layouts)
  |- lib (ruby files extending nanoc)
  |- output [ -&amp;gt; "gh-pages" ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;create the gh-pages branch&lt;/p&gt;
&lt;pre&gt;&lt;code class="bash"&gt;  $ cd output
  # initialize the local repository
  $ git init
  $ git add .
  # commits your files
  $ git commit -am "init"
  # rename our master branch
  $ git branch -m master gh-pages
  # add your github repository as origin
  $ git remote add origin git@github.com:[user]/[name].git
  # push to the remote repository
  $ git push origin gh-pages
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <id>tag:notes.sovechkin.com,2012-06-22:/oblivion_theme_for_emacs.html</id>
    <title type="html">oblivion theme for Emacs</title>
    <published>2012-06-22T15:48:17Z</published>
    <updated>2012-06-22T15:47:35Z</updated>
    <link rel="alternate" href="http://notes.sovechkin.com/oblivion_theme_for_emacs.html"/>
    <content type="html">&lt;p&gt;&lt;a href="https://github.com/pomeo/oblivion-emacs"&gt;&lt;img src="http://img.sovechkin.com/oblivion.png" alt="oblivion theme for Emacs" /&gt;&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
</feed>
